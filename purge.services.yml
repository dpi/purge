services:

  # PURGE.PURGER: The executive service, which processes purgeable objects.
  purge.purger:
    class: Drupal\purge\Purger\PurgerService
    arguments: ['@plugin.manager.purge.purger', '@service_container', '@config.factory']
  plugin.manager.purge.purger:
    class: Drupal\purge\Purger\PurgerManager
    parent: default_plugin_manager

  # PURGE.PURGEABLES: The purgeable object factory.
  purge.purgeables:
    class: Drupal\purge\Purgeable\PurgeableService
    arguments: ['@plugin.manager.purge.purgeables']
  plugin.manager.purge.purgeables:
    class: Drupal\purge\Purgeable\PurgeableManager
    parent: default_plugin_manager

  # PURGE.QUEUE: The queue in which to store, claim and release purgeable objects from.
  purge.queue:
    class: Drupal\purge\Queue\QueueService
    arguments: ['@plugin.manager.purge.queue', '@service_container', '@config.factory', '@purge.purgeables']
  plugin.manager.purge.queue:
    class: Drupal\purge\Queue\QueueManager
    parent: default_plugin_manager

  # PURGE.DIAGNOSTICS: The tests service which warns and monitors for issues.
  purge.diagnostics:
    class: Drupal\purge\RuntimeTest\RuntimeTestService
    arguments: ['@plugin.manager.purge.diagnostics', '@service_container', '@purge.purger', '@purge.queue']
  plugin.manager.purge.diagnostics:
    class:  Drupal\purge\RuntimeTest\RuntimeTestManager
    parent: default_plugin_manager
