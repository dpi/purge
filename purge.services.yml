services:

  # PURGE.QUEUER.CACHE_TAGS
  #
  # Captures Drupals own internal cache invalidations and automatically adds
  # tag purgeables to 'purge.queue', which is why its a 'queuer'. If this
  # service is undesirable, see tests/modules/purge_noqueuer_test as example.
  purge.queuer.cache_tags:
    class: Drupal\purge\Queuer\CacheTagsQueuer
    arguments: ['@purge.queue', '@purge.purgeable.factory']
    tags:
      - { name: cache_tags_invalidator }

  # PURGE.PURGEABLE.FACTORY
  #
  # The purgeable object factory, generating 'purge instruction' value objects
  # on demand. Purgeables have state and flow freely between queue and purgers,
  # but can also be instantiated through the factory and get fed to the purger
  # straight away.
  purge.purgeable.factory:
    class: Drupal\purge\Purgeable\Service
    arguments: ['@plugin.manager.purge.purgeable']
  plugin.manager.purge.purgeable:
    class: Drupal\purge\Purgeable\PluginManager
    parent: default_plugin_manager

  # PURGE.QUEUE:
  #
  # The queue service which stores, claims, releases and accepts purgeable
  # objects returning from 'purge.purgers'.
  purge.queue:
    class: Drupal\purge\Queue\Service
    arguments: ['@plugin.manager.purge.queue', '@service_container', '@config.factory', '@purge.purgeable.factory']
    tags:
      - { name: needs_destruction }
  plugin.manager.purge.queue:
    class: Drupal\purge\Queue\PluginManager
    parent: default_plugin_manager

  # PURGE.DIAGNOSTICS:
  #
  # The diagnostics service which monitors and warns for problematic situations
  # that can occur during purging. When it detects severe issues, it will
  # prevent all purges in the first place.
  purge.diagnostics:
    class: Drupal\purge\DiagnosticCheck\Service
    arguments: ['@plugin.manager.purge.diagnostics', '@service_container', '@purge.purgers', '@purge.queue']
  plugin.manager.purge.diagnostics:
    class:  Drupal\purge\DiagnosticCheck\PluginManager
    parent: default_plugin_manager

  # PURGE.PURGERS:
  #
  # The executive service which lets enabled purgers invalidate external caches.
  purge.purgers:
    class: Drupal\purge\Purger\Service
    arguments: ['@plugin.manager.purge.purgers', '@service_container', '@config.factory']
  plugin.manager.purge.purgers:
    class: Drupal\purge\Purger\PluginManager
    parent: default_plugin_manager
