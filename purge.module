<?php

#
# EXAMPLE API USAGE
#

// Retrieve the 'purge.queue' and 'purge.purgeable_factory' services using the
// legacy global \Drupal::service() accessors. Real world examples will need to
// // get these services injected into their code contexts.
// $queue = \Drupal::service('purge.queue');
// $purgeables = \Drupal::service('purge.purgeables');

/**
// But do we always need the queue? No, simple short purges - for instance
// originating from a Drush command - can be fed directly to the purger.
$frontpage = $purgeables->matchFromStringRepresentation('<front>');
\Drupal::service('purge.purger')->purge($frontpage);

// Now we added a 1000 purgeables, let's claim about 10 of them for 15 minutes.
// Then iterate through them and lets let the purger execute the purges ("purging").

foreach ($claims as $purgeable) {

  // Command the purger to execute the given purgeable (which instructs the
  // purger what it should be purging).
  if ($purger->purge($purgeable)) {

    // When it succeeded, delete it from the queue.
    $queue->delete($purgeable);
  }
  else {

    // When it failed, release it back to the queue so someone else can retry.
    $queue->release($purgeable);
  }
}
*/
